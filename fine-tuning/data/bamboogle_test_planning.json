[
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was president of the United States in the year that Citibank was founded?\"\n",
    "input":null,
    "output":[
      "james madison"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What rocket was the first spacecraft that ever approached Uranus launched on?\"\n",
    "input":null,
    "output":[
      "Titan IIIE"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year was the company that was founded as Sound of Music added to the S&P 500?\"\n",
    "input":null,
    "output":[
      "1999"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the first African American mayor of the most populous city in the United States?\"\n",
    "input":null,
    "output":[
      "David Dinkins"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the last king from Britain's House of Hanover die?\"\n",
    "input":null,
    "output":[
      "20 June 1837"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the president who set the precedent of a two term limit enter office?\"\n",
    "input":null,
    "output":[
      "April 30, 1789"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the president who set the precedent of a two term limit leave office?\"\n",
    "input":null,
    "output":[
      "March 4, 1797"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"How many people died in the second most powerful earthquake ever recorded?\"\n",
    "input":null,
    "output":[
      "131"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Can people who have celiac eat camel meat?\"\n",
    "input":null,
    "output":[
      "Yes"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What was the final book written by the author of On the Origin of Species?\"\n",
    "input":null,
    "output":[
      "The Formation of Vegetable Mould Through the Action of Worms"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the company that built the first steam locomotive to carry passengers on a public rail line founded?\"\n",
    "input":null,
    "output":[
      "1823"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Which Theranos whistleblower is not related to a senior American government official?\"\n",
    "input":null,
    "output":[
      "Erika Cheung"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the fastest air-breathing manned aircraft mostly made out of?\"\n",
    "input":null,
    "output":[
      "Titanium"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who built the fastest air-breathing manned aircraft?\"\n",
    "input":null,
    "output":[
      "Lockheed Corporation"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the author of The Population Bomb born?\"\n",
    "input":null,
    "output":[
      "11838"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the author of Annabel Lee enlist in the army?\"\n",
    "input":null,
    "output":[
      "1827"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What was the religion of the inventor of the Polio vaccine?\"\n",
    "input":null,
    "output":[
      "Jewish"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the second wife of the founder of CNN?\"\n",
    "input":null,
    "output":[
      "Jane Shirley Smith"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the first prime minister of the Russian Empire come into office?\"\n",
    "input":null,
    "output":[
      "2137"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the primary male hormone derived from?\"\n",
    "input":null,
    "output":[
      "cholesterol"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"The Filipino statesman who established the government-in-exile during the outbreak of World War II was also the mayor of what city?\"\n",
    "input":null,
    "output":[
      "Quezon City"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Where was the person who shared the Nobel Prize in Physics in 1954 with Max Born born?\"\n",
    "input":null,
    "output":[
      "Oranienburg, Germany"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the person who shared the Nobel Prize in Physics in 1954 with Max Born born?\"\n",
    "input":null,
    "output":[
      "January 8, 1891"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What was the founding date of the university in which Plotonium was discovered?\"\n",
    "input":null,
    "output":[
      "March 23, 1868"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"The material out of which the Great Sphinx of Giza is made of is mainly composed of what mineral?\"\n",
    "input":null,
    "output":[
      "calcite"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"The husband of Lady Godiva was Earl of which Anglic kingdom?\"\n",
    "input":null,
    "output":[
      "Mercia"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"The machine used to extract honey from honeycombs uses which physical force?\"\n",
    "input":null,
    "output":[
      "Centrifugal Force"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the third letter of the top level domain of the military?\"\n",
    "input":null,
    "output":[
      "l"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year was the government department where the internet originated at founded?\"\n",
    "input":null,
    "output":[
      "1947"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"The main actor of Indiana Jones is a licensed what?\"\n",
    "input":null,
    "output":[
      "pilot"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the person after which the Hubble Space Telescope is named after born?\"\n",
    "input":null,
    "output":[
      "November 20, 1889"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the person who gave the Checkers speech die?\"\n",
    "input":null,
    "output":[
      "34446"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the philosopher that formulated the hard problem of consciousness born?\"\n",
    "input":null,
    "output":[
      "24217"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the capital of the second largest state in the US by area?\"\n",
    "input":null,
    "output":[
      "Austin"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the maximum airspeed (in km\/h) of the third fastest bird?\"\n",
    "input":null,
    "output":[
      "320 km\/h"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who founded the city where the founder of geometry lived?\"\n",
    "input":null,
    "output":[
      "Alexander the Great"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the capital of the country where yoga originated?\"\n",
    "input":null,
    "output":[
      "New Delhi"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"The fourth largest city in Germany was originally called what?\"\n",
    "input":null,
    "output":[
      "Colonia Claudia Ara Agrippinensium"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did Nirvana's second most selling studio album come out?\"\n",
    "input":null,
    "output":[
      "34225"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What was the job of the father of the founder of psychoanalysis?\"\n",
    "input":null,
    "output":[
      "wool merchant"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"How much protein in four boiled egg yolks?\"\n",
    "input":null,
    "output":[
      "10.8"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the political party of the American president who entered into the Paris agreement?\"\n",
    "input":null,
    "output":[
      "Democratic Party"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"The most populous city in Punjab is how large (area wise)?\"\n",
    "input":null,
    "output":[
      "310 square kilometers"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What was the death toll of the second largest volcanic eruption in the 20th century?\"\n",
    "input":null,
    "output":[
      "847"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What was the death toll of the most intense Atlantic hurricane?\"\n",
    "input":null,
    "output":[
      "52"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the head of NASA during Apollo 11?\"\n",
    "input":null,
    "output":[
      "Thomas O. Paine"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the father of the father of George Washington?\"\n",
    "input":null,
    "output":[
      "Lawrence Washington"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the mother of the father of George Washington?\"\n",
    "input":null,
    "output":[
      "Mildred Warner",
      "Mildred Gale"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the father of the father of Barack Obama?\"\n",
    "input":null,
    "output":[
      "Hussein Onyango Obama"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the mother of the father of Barack Obama?\"\n",
    "input":null,
    "output":[
      "Habiba Akumu Nyanjango"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was mayor of New York City when Fiorello H. La Guardia was born?\"\n",
    "input":null,
    "output":[
      "William Russell Grace"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was president of the U.S. when superconductivity was discovered?\"\n",
    "input":null,
    "output":[
      "William Howard Taft"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the person Russ Hanneman is based on born?\"\n",
    "input":null,
    "output":[
      "21397"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the first location of the world's largest coffeehouse chain opened?\"\n",
    "input":null,
    "output":[
      "26022"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who directed the highest grossing film?\"\n",
    "input":null,
    "output":[
      "James Cameroon"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the longest bridge in the world opened?\"\n",
    "input":null,
    "output":[
      "40724"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Which company was responsible for the largest pharmaceutical settlement?\"\n",
    "input":null,
    "output":[
      "GlaxoSmithKline"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year was the tallest self-supporting tower completed?\"\n",
    "input":null,
    "output":[
      "2012"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year was the tallest fixed steel structure completed?\"\n",
    "input":null,
    "output":[
      "1988"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year was the tallest lattice tower completed?\"\n",
    "input":null,
    "output":[
      "2012"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year was the current tallest wooden lattice tower completed?\"\n",
    "input":null,
    "output":[
      "1935"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what country is the second tallest statue in the world?\"\n",
    "input":null,
    "output":[
      "China"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the tallest ferris wheel in the world completed?\"\n",
    "input":null,
    "output":[
      "2021"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year was the tallest lighthouse completed?\"\n",
    "input":null,
    "output":[
      "1902"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what country is the world largest desalination plant?\"\n",
    "input":null,
    "output":[
      "Saudi Arabia"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"The most populous national capital city was established in what year?\"\n",
    "input":null,
    "output":[
      "1045 BC"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"The third largest river (by discharge) in the world is in what countries?\"\n",
    "input":null,
    "output":[
      "India and Bangladesh"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the highest elevation (in meters) of the second largest island in the world?\"\n",
    "input":null,
    "output":[
      "4,884 m"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the length of the second deepest river in the world?\"\n",
    "input":null,
    "output":[
      "6,300 km"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what country is the third largest stadium in the world?\"\n",
    "input":null,
    "output":[
      "United States"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the largest aircraft carrier in the world is named after?\"\n",
    "input":null,
    "output":[
      "Gerald R. Ford"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year did the oldest cat ever recorded with the Cat of the Year award?\"\n",
    "input":null,
    "output":[
      "1999"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year was the country that is the third largest exporter of coffee founded?\"\n",
    "input":null,
    "output":[
      "1810"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the commander for the space mission that had the first spacewalk?\"\n",
    "input":null,
    "output":[
      "Pavel Belyayev"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the predecessor of the longest-reigning British monarch?\"\n",
    "input":null,
    "output":[
      "George VI\n"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In 2016, who was the host of the longest running talk show?\"\n",
    "input":null,
    "output":[
      "Jimmy Fallon"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In 2016, who was the host of the longest running American game show?\"\n",
    "input":null,
    "output":[
      "Drew Carey"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who wrote the novel on which the longest running show in Broadway history is based on?\"\n",
    "input":null,
    "output":[
      "Gaston Leroux"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what country was the only cruise line that flies the American flag incorporated in?\"\n",
    "input":null,
    "output":[
      "Bermuda"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"In what year did work begin on the second longest road tunnel in the world?\"\n",
    "input":null,
    "output":[
      "1992"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the official color of the third oldest surviving university?\"\n",
    "input":null,
    "output":[
      "Cambridge Blue"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who succeeded the longest reigning Roman emperor?\"\n",
    "input":null,
    "output":[
      "Tiberius"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who preceded the Roman emperor that declared war on the sea?\"\n",
    "input":null,
    "output":[
      "Tiberius"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who produced the longest running video game franchise?\"\n",
    "input":null,
    "output":[
      "MECC"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the father of the father of psychoanalysis?\"\n",
    "input":null,
    "output":[
      "Jacob Freud"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the father of the father of empiricism?\"\n",
    "input":null,
    "output":[
      "Sir Nicholas Bacon"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the father of the father of observational astronomy?\"\n",
    "input":null,
    "output":[
      "Vincenzo Galilei"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the father of the father of modern Hebrew?\"\n",
    "input":null,
    "output":[
      "Yehuda Leib"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the father of the father of modern experimental psychology?\"\n",
    "input":null,
    "output":[
      "Maximilian Wundt"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the father of the originator of cybernetics?\"\n",
    "input":null,
    "output":[
      "Leo Wiener"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the father of the father of the hydrogen bomb?\"\n",
    "input":null,
    "output":[
      "Max Teller"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the father of the father of computer science?\"\n",
    "input":null,
    "output":[
      "Julius Mathison Turing"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the father of the father of behaviorism?\"\n",
    "input":null,
    "output":[
      "Pickens Butler Watson"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the father of the founder of modern human anatomy?\"\n",
    "input":null,
    "output":[
      "Anders van Wesel"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What was the father of the last surviving Canadian father of Confederation?\"\n",
    "input":null,
    "output":[
      "Charles Tupper Sr."
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the person who said “Now, I am become Death, the destroyer of worlds.” born?\"\n",
    "input":null,
    "output":[
      "1574"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the father of the father of information theory?\"\n",
    "input":null,
    "output":[
      "Claude Sr."
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the person who delivered the \"Quit India\" speech born?\"\n",
    "input":null,
    "output":[
      "October 2, 1869"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the president who warned about the military industrial complex die?\"\n",
    "input":null,
    "output":[
      "25290"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the president who said Tear Down This Wall die?\"\n",
    "input":null,
    "output":[
      "38143"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the lowest elevation of the longest railway tunnel?\"\n",
    "input":null,
    "output":[
      "312 m"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the person who said \"Cogito, ergo sum.\" die?\"\n",
    "input":null,
    "output":[
      "February 11, 1650"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the person who delivered the Gettysburg Address die?\"\n",
    "input":null,
    "output":[
      "April 15, 1865"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was governor of Florida during Hurricane Irma?\"\n",
    "input":null,
    "output":[
      "Rick Scott"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"For which club did the winner of the 2007 Ballon d'Or play for in 2012?\"\n",
    "input":null,
    "output":[
      "Real Madrid"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What's the capital city of the country that was the champion of the 2010 World Cup?\"\n",
    "input":null,
    "output":[
      "Madrid"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the anime studio that made Sword Art Online founded?\"\n",
    "input":null,
    "output":[
      "38481"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the first king of the longest Chinese dynasty?\"\n",
    "input":null,
    "output":[
      "King Wu of Zhou"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the last emperor of the dynasty that succeeded the Song dynasty?\"\n",
    "input":null,
    "output":[
      "Toghon Temür"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What's the motto of the oldest California State university?\"\n",
    "input":null,
    "output":[
      "Powering Silicon Valley"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What's the capital of the state that the College of William & Mary is in?\"\n",
    "input":null,
    "output":[
      "Richmond"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What's the capital of the state that Washington University in St. Louis is in?\"\n",
    "input":null,
    "output":[
      "Jefferson City"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What's the capital of the state that Harvard University is in?\"\n",
    "input":null,
    "output":[
      "Boston"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What's the capital of the state that the Space Needle is at?\"\n",
    "input":null,
    "output":[
      "Olympia"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Which team won in women's volleyball in the most recent Summer Olympics that was held in London?\"\n",
    "input":null,
    "output":[
      "Brazil"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the nickname of the easternmost U.S. state?\"\n",
    "input":null,
    "output":[
      "Pine Tree State"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the nickname for the state that is the home to the “Avocado Capital of the World\"?\"\n",
    "input":null,
    "output":[
      "Golden State"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What rocket was used for the mission that landed the first humans on the moon?\"\n",
    "input":null,
    "output":[
      "Saturn V"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When did the war that Neil Armstrong served in end?\"\n",
    "input":null,
    "output":[
      "19567"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What is the nickname for the state that Mount Rainier is located in?\"\n",
    "input":null,
    "output":[
      "Evergreen State"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"When was the composer of Carol of the Bells born?\"\n",
    "input":null,
    "output":[
      "December 13, 1877"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who is the father of the scientist at MIT that won the Queen Elizabeth Prize for Engineering in 2013?\"\n",
    "input":null,
    "output":[
      "Conway Berners-Lee"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Who was the mother of the emperor of Japan during World War I?\"\n",
    "input":null,
    "output":[
      "Yanagiwara Naruko"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"Which element has an atomic number that is double that of hydrogen?\"\n",
    "input":null,
    "output":[
      "Helium"
    ]
  },
  {
    "instruction":"###Complete the Code Below###\n\nfrom langchain import SerpAPIWrapper\nfrom utils import QA_LLM\nsearch = SerpAPIWrapper()\n\ndef Search(query:str,thought:str):\n    \"\"\"Search relevant information about query based on external Search Engine.\n    Attributes:\n\t\tquery: The question you want to search.\n\t\tthought: The reason why this query is need. \n    \"\"\"\n    if thought is not None:\n        return search.run(query)\n    else:\n        return (\"Please give your thought!\")\n\ndef Get_Answer(query:str,info:str):\n    \"\"\"Get the answer of the query based on the information.\n    Attributes:\n    query: The question you want to search.\n    info: The information relevant to the query.\n    \"\"\"\n    ### Use the QA_LLM model to get the answer.\n    return QA_LLM(query,info)\n\ndef Compare(Original_Query:str,Subquestions:list,Answers:list):\n    \"\"\"Compare the answer of the sub-questions and return the final answer of original query.\n    Attributes:\n    Original_Query: The original question.\n    Subquestions: The list of sub-questions.\n    Answers: The list of answers of the sub-questions.\n    \"\"\"\n    query = Original_Query\n    info = str()\n    for i in range(len(Subquestions)):\n        info += Subquestions[i] + ' : ' + Answers[i] + '\\n'\n    return QA_LLM(query,info)\n\ndef Intersection(Answer1:str,Answer2:str):\n    \"\"\"Find the intersection of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) & set(List2))\n\ndef Union(Answer1:str,Answer2:str):\n    \"\"\"Find the union of two answer sets.\n    Attributes:\n    Answer1: The first answer set.\n    Answer2: The second answer set.\n    \"\"\"\n    List1 = Answer1.split(',')\n    List2 = Answer2.split(',')\n    return str(set(List1) | set(List2))\n\ndef Finish_The_Plan(Answer:str):\n    \"\"\"Call this function to finish the plan and return the final answer.\n    Attributes:\n    Answer: The final answer of the original question.\n    \"\"\"\n    return Answer\n\n###################\n# Example 0:\n###################\n\nOriginal_Question: str = \"What is the ethnic group of Booker T. Jones?\"\n### Question Type: One Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"An atomic question, no need to decompose. Search directly.\"\nSub_Question_1: str = \"What is the ethnic group of Booker T. Jones?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_1)\n\n###################\n# Example 1:\n###################\n\nOriginal_Question: str = \"Who succeeded the first President of Namibia?\"\n### Question Type: Two Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who succeeded the first President of Namibia, I need to first know who is the first President of Namibia.\"\nSub_Question_1: str = \"Who is the first President of Namibia?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing who is the first President of Namibia, I need to know who succeeded him.\"\nSub_Question_2: str = f\"Who succeeded {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_2)\n\n###################\n# Example 2:\n###################\n\nOriginal_Question: str = \"What is the foundational text of Android developer's country?\"\n### Question Type: Three Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what is the foundational text of Android developer's country, I need to first know what(who) is the developer of Android.\"\nSub_Question_1: str = \"What(Who) is the developer of Android?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"After knowing what(who) is the developer of Android, I need to the know its country.\"\nSub_Question_2: str = f\"What is the country of {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is the country of Android developer, I need to know what is the foundational text of country Ans_2.\"\nSub_Question_3: str = f\"What is the foundational text of {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 3:\n###################\n\nOriginal_Question: str = \"When was the first establishment that McDonaldization is named after, open in the country Horndean is located?\"\n### Question Type: Entity Replacement\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know when the first establishment that McDonaldization is named after, open in the country Horndean is located, I need to first know what is McDonaldization named after.\"\nSub_Question_1: str = \"What is McDonaldization named after?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know where the country Horndean is located.\"\nSub_Question_2: str = \"Where is the country Horndean located?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing what is McDonaldization named after (i.e., Ans_1) and where the country Horndean is located (i.e., Ans_2), I need to know when the first Ans_1 open in the Ans_2.\"\nSub_Question_3: str = f\"When did the first {Ans_1}\\'s open in {Ans_2}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 4:\n###################\n\nOriginal_Question: str = \"Which magazine was started first Arthur's Magazine or First for Women?\"\n### Question Type: Compare\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which magazine was started first, I need to first know when Arthur's Magazine was started.\"\nSub_Question_1: str = \"When was Arthur's Magazine started?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know when First for Women was started.\"\nSub_Question_2: str = \"When was First for Women started?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing when Arthur's Magazine was started (i.e., Ans_1) and when First for Women was started, I need to compare the two dates.\"\nAns_3: str = Compare(Original_Query = Original_Question, Subquestions = [Sub_Question_1,Sub_Question_2], Answers = [Ans_1,Ans_2])\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Example 5:\n###################\n\nOriginal_Question: str = \"Which areas border with Burlington County and Trumbull County at the same time?\"\n### Question Type: Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which areas border with Burlington County and Trumbull County at the same time, I need to first know which areas border with Burlington County.\"\nSub_Question_1: str = \"Which areas border with Burlington County?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know which areas border with Trumbull County.\"\nSub_Question_2: str = \"Which areas border with Trumbull County?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing which areas border with Burlington County (i.e., Ans_1) and which areas border with Trumbull County (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n\n###################\n# Example 6:\n###################\n\nOriginal_Question: str = \"What are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio?\"\n### Question Type: Three Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the same genre shared between Alice in Wonderland, Blues Brothers 2000 and Pinocchio, I need to first know what is the genre of Alice in Wonderland.\"\nSub_Question_1: str = \"What is the genre of Alice in Wonderland?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know what is the genre of Blues Brothers 2000.\"\nSub_Question_2: str = \"What is the genre of Blues Brothers 2000?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know what is the genre of Pinocchio.\"\nSub_Question_3: str = \"What is the genre of Pinocchio?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing what is the genre of Alice in Wonderland (i.e., Ans_1), what is the genre of Blues Brothers 2000 (i.e., Ans_2) and what is the genre of Pinocchio (i.e., Ans_3), I need to find the intersection of the three answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\nInter_Results2: str = Intersection(Answer1 = Inter_Results1, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results2)\n\n###################\n# Example 7:\n###################\n\nOriginal_Question: str = \"Who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic'?\"\n### Question Type: Two Union\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know who are all the cast members from 'Wuthering Heights' combined with the cast members from 'Traffic', I need to first know who are the cast members from 'Wuthering Heights'.\"\nSub_Question_1: str = \"Who are the cast members from 'Wuthering Heights'?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members from 'Traffic'.\"\nSub_Question_2: str = \"Who are the cast members from 'Traffic'?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members from 'Wuthering Heights' (i.e., Ans_1) and who are the cast members from 'Traffic' (i.e., Ans_2), I need to find the union of the two answer sets.\"\nUnion_Results1: str = Union(Answer1 = Ans_1, Answer2 = Ans_2)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Union_Results1)\n\n###################\n# Example 8:\n###################\n\nOriginal_Question: str = \"Which regions border Drake Bell's birthplace and Santa Ana at the same time?\"\n### Question Type: Projection then Two Intersection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know which regions border Drake Bell's birthplace and Santa Ana at the same time, I need to first know where is Drake Bell's birthplace.\"\nSub_Question_1: str = \"Where is Drake Bell's birthplace?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"Then I need to know which regions border with Drake Bell's birthplace.(i.e., Ans_1)\"\nSub_Question_2: str = f\"Which regions border with {Ans_1}?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"At the same time, I need to know which regions border with Santa Ana.\"\nSub_Question_3: str = \"Which regions border with Santa Ana?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought3)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nThought4: str = \"After knowing which regions border with Drake Bell's birthplace (i.e., Ans_2) and which regions border with Santa Ana (i.e., Ans_3), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_2, Answer2 = Ans_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Inter_Results1)\n\n###################\n# Example 9:\n###################\n\nOriginal_Question: str = \"What are the political party of people who are cast members of both The Blues Brothers and Going My Way?\"\n### Question Type: Two Intersection then Projection\n### Decompose the original question into sub-questions.\n\nThought1: str = \"If I want to know what are the political party of people who are cast members of both The Blues Brothers and Going My Way, I need to first know who are the cast members of The Blues Brothers.\"\nSub_Question_1: str = \"Who are the cast members of The Blues Brothers?\"\nInfo_1: str = Search(query = Sub_Question_1, thought = Thought1)\nAns_1: str = Get_Answer(query = Sub_Question_1, info = Info_1)\n\nThought2: str = \"At the same time, I need to know who are the cast members of Going My Way.\"\nSub_Question_2: str = \"Who are the cast members of Going My Way?\"\nInfo_2: str = Search(query = Sub_Question_2, thought = Thought2)\nAns_2: str = Get_Answer(query = Sub_Question_2, info = Info_2)\n\nThought3: str = \"After knowing who are the cast members of The Blues Brothers (i.e., Ans_1) and who are the cast members of Going My Way (i.e., Ans_2), I need to find the intersection of the two answer sets.\"\nInter_Results1: str = Intersection(Answer1 = Ans_1, Answer2 = Ans_2)\n\nThought4: str = \"Then I need to know the political party of the people in Inter_Results1.\"\nSub_Question_3: str = f\"What are the political party of people in {Inter_Results1}?\"\nInfo_3: str = Search(query = Sub_Question_3, thought = Thought4)\nAns_3: str = Get_Answer(query = Sub_Question_3, info = Info_3)\n\nFinal_Answer: str = Finish_The_Plan(Answer = Ans_3)\n\n###################\n# Your turn! Just complete the code below and do not return other things.\n###################\n\nOriginal_Question: str = \"What was the motto of the Olympics that had Fuwa as the mascots?\"\n",
    "input":null,
    "output":[
      "One World, One Dream"
    ]
  }
]